{"version":3,"sources":["components/Habits.js","components/Dropdown.js","components/DateSelector.js","components/DownloadButton.js","components/Footer.js","components/MonthLayout.js","components/FullLayout.js","components/App.js","index.js"],"names":["Habits","habits","onClickDeleteHabit","onClickAddHabit","onClickClearAllHabits","onSetHabits","useState","newHabitText","setNewHabitText","addNewHabit","renderedHabits","_","map","habit","index","draggableId","id","provided","_snapshot","ref","innerRef","draggableProps","dragHandleProps","className","onClick","text","e","preventDefault","href","onDragEnd","result","destination","newItems","splice","source","removed","droppableId","droppableProps","placeholder","type","onChange","event","target","value","onKeyPress","key","disabled","Dropdown","label","options","selected","onSelectedChange","open","setOpen","useRef","useEffect","onBodyClick","current","contains","document","body","addEventListener","removeEventListener","renderedOptions","option","isSelected","getRenderedLabel","MONTH_OPTIONS","DateSelector","currentMonth","currentYear","monthCount","onMonthChange","onYearChange","onMonthCountChange","yearToOption","year","durationToOption","duration","selection","startYear","Date","getFullYear","range","getYearOptions","maxDuration","DownloadButton","refRenderRoot","loading","setLoading","onClickDownload","px","mm","start","end","input","inputHeightMm","offsetHeight","Math","floor","getElementById","a4HeightMm","a4HeightPx","numPages","console","log","Array","join","split","val","comp","inputHeightPx","inputWidthPx","offsetWidth","html2canvas","scrollX","scrollY","then","canvas","imgData","toDataURL","pdf","jsPDF","ar","xwidth","internal","pageSize","getWidth","xheight","getHeight","addImage","paddingMm","save","style","height","Footer","rel","aria-hidden","getDayOfWeek","month","day","dayOfWeek","getDay","isNaN","MONTHS","MonthLayout","numDaysInMonth","getDate","daysInMonth","dayNumbers","COL_COUNT","renderHeader","emptyCells","i","renderedRows","renderBody","renderTable","FullLayout","startMonth","renderedMonths","desiredMonths","push","getDesiredMonths","length","App","getMonth","setStartMonth","setStartYear","setMonthCount","nanoid","setHabits","filter","newHabit","newHabits","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.34203d04.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"./Habits.css\";\n\nconst Habits = ({\n  habits,\n  onClickDeleteHabit,\n  onClickAddHabit,\n  onClickClearAllHabits,\n  onSetHabits,\n}) => {\n  const [newHabitText, setNewHabitText] = useState(\"\");\n\n  const onInputChange = (event) => {\n    setNewHabitText(event.target.value);\n  };\n\n  const onInputKeyPress = (event) => {\n    if (event.key === \"Enter\" && newHabitText) {\n      addNewHabit();\n    }\n  };\n\n  const addNewHabit = () => {\n    onClickAddHabit(newHabitText);\n\n    // Clear input.\n    setNewHabitText(\"\");\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    \n    const newItems = [...habits];\n    const [removed] = newItems.splice(result.source.index, 1);\n    newItems.splice(result.destination.index, 0, removed);\n    onSetHabits(newItems);\n  }\n\n  const renderedHabits = _.map(habits, (habit, index) => {\n    return (\n      <Draggable key={habit.id} draggableId={habit.id} index={index}>\n          {(provided, _snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className=\"item destroy-button\">\n              <div className=\"right floated content hide\">\n                <i className=\"x icon\" onClick={() => onClickDeleteHabit(index)}></i>\n              </div>\n              <div className=\"content\">{habit.text}</div>\n            </div>\n          )}\n      </Draggable>\n    );\n  });\n\n  return (\n    <div>\n      <b>\n        Habits{\" \"}\n        <small>\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              onClickClearAllHabits();\n            }}\n            href=\".\"\n          >\n            (clear all)\n          </a>\n        </small>\n      </b>\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, _snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"ui aligned divided list\">\n                {renderedHabits}\n                {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <div className=\"ui fluid small action input\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a habit...\"\n          onChange={onInputChange}\n          onKeyPress={onInputKeyPress}\n          value={newHabitText}\n        />\n        <button\n          disabled={!newHabitText}\n          onClick={() => addNewHabit()}\n          className=\"ui button\"\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Habits;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nconst Dropdown = ({ label, options, selected, onSelectedChange }) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n\n  useEffect(() => {\n    const onBodyClick = (event) => {\n      // Only attempt to 'close' the dropdown if the clicked\n      // target is not part of this Dropdown component.\n      // The component itself already handles open/closed state\n      // so we don't want to interfere with this.\n      if (ref.current && ref.current.contains(event.target)) {\n        return;\n      }\n      setOpen(false);\n    };\n\n    document.body.addEventListener(\"click\", onBodyClick);\n\n    return () => {\n      document.body.removeEventListener(\"click\", onBodyClick);\n    };\n  }, []);\n\n  const renderedOptions = options.map((option) => {\n    const isSelected = option.value === selected.value;\n    const getRenderedLabel = (label) => {\n      return isSelected ? <b>{label}</b> : label;\n    };\n\n    return (\n      <div\n        key={option.value}\n        className={\"item \" + (isSelected ? \"selected\" : \"\")}\n        onClick={() => {\n          onSelectedChange(option);\n        }}\n      >\n        {getRenderedLabel(option.label)}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"ui form\">\n      <div className=\"field\">\n        <label className=\"label\">{label}</label>\n        <div\n          ref={ref}\n          onClick={() => setOpen(!open)}\n          className={`ui selection dropdown ${open ? \"visible active\" : \"\"}`}\n        >\n          <i className=\"dropdown icon\"></i>\n          <div className=\"text\">{selected.label}</div>\n          <div className={`menu ${open ? \"visible transition\" : \"\"}`}>\n            {renderedOptions}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import _ from \"lodash\";\nimport Dropdown from \"./Dropdown\";\nimport \"./DateSelector.css\";\n\nconst MONTH_OPTIONS = [\n  {\n    label: \"January\",\n    value: 0,\n  },\n  {\n    label: \"February\",\n    value: 1,\n  },\n  {\n    label: \"March\",\n    value: 2,\n  },\n  {\n    label: \"April\",\n    value: 3,\n  },\n  {\n    label: \"May\",\n    value: 4,\n  },\n  {\n    label: \"June\",\n    value: 5,\n  },\n  {\n    label: \"July\",\n    value: 6,\n  },\n  {\n    label: \"August\",\n    value: 7,\n  },\n  {\n    label: \"September\",\n    value: 8,\n  },\n  {\n    label: \"October\",\n    value: 9,\n  },\n  {\n    label: \"November\",\n    value: 10,\n  },\n  {\n    label: \"December\",\n    value: 11,\n  },\n];\n\nconst DateSelector = ({\n  currentMonth,\n  currentYear,\n  monthCount,\n  onMonthChange,\n  onYearChange,\n  onMonthCountChange,\n}) => {\n  const getCurrentMonth = () => {\n    return MONTH_OPTIONS[currentMonth];\n  };\n\n  const getYearOptions = () => {\n    const offset = 5;\n    const startYear = new Date().getFullYear();\n    return _.range(startYear - offset, startYear + offset).map(yearToOption);\n  };\n\n  const yearToOption = (year) => {\n    return {\n      label: year,\n      value: year,\n    };\n  };\n\n  const getDurationOptions = () => {\n    const minDuration = 1;\n    // TODO(shyam): we should be able to support up to 12 months,\n    // but PDF gen currently doesn't support multi-page printing.\n    const maxDuration = 4;\n    return _.range(minDuration, maxDuration + 1).map(durationToOption);\n  };\n\n  const durationToOption = (duration) => {\n    return {\n      label: duration > 1 ? `${duration} months` : `${duration} month`,\n      value: duration,\n    };\n  };\n\n  return (\n    <div>\n      <Dropdown\n        label={\"Start month:\"}\n        options={MONTH_OPTIONS}\n        selected={getCurrentMonth()}\n        onSelectedChange={(selection) => onMonthChange(selection.value)}\n      />\n\n      <Dropdown\n        label={\"Start year:\"}\n        options={getYearOptions()}\n        selected={yearToOption(currentYear)}\n        onSelectedChange={(selection) => onYearChange(selection.value)}\n      />\n\n      <Dropdown\n        label={\"Duration:\"}\n        options={getDurationOptions()}\n        selected={durationToOption(monthCount)}\n        onSelectedChange={(selection) => {\n          onMonthCountChange(selection.value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DateSelector;\n","import html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { useState } from \"react\";\n\nconst pxToMm = (px) => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = (mm) => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function (val, id) {\n      return id + start;\n    });\n};\n\n// TODO(shyam):\n// - this is likely broken for > 4 months worth of tables (need to support multiple pages)\n// - this is likely broken for different screen resolutions or browser size configurations.. needs more testing.\nconst DownloadButton = ({ refRenderRoot, disabled }) => {\n  const [loading, setLoading] = useState(false);\n\n  const onClickDownload = () => {\n    setLoading(true);\n\n    // Ref: https://medium.com/@shivekkhurana/how-to-create-pdfs-from-react-components-client-side-solution-7f506d9dfa6d\n    const input = refRenderRoot.current;\n    const inputHeightMm = pxToMm(input.offsetHeight);\n    const a4WidthMm = 210;\n    const a4HeightMm = 297;\n    const a4HeightPx = mmToPx(a4HeightMm);\n    const numPages =\n      inputHeightMm <= a4HeightMm\n        ? 1\n        : Math.floor(inputHeightMm / a4HeightMm) + 1;\n    console.log({\n      input,\n      inputHeightMm,\n      a4HeightMm,\n      a4HeightPx,\n      numPages,\n      range: range(0, numPages),\n      comp: inputHeightMm <= a4HeightMm,\n      inputHeightPx: input.offsetHeight,\n      inputWidthPx: input.offsetWidth,\n    });\n\n    html2canvas(input, {\n      // Explicitly specify scroll values to avoid offsets being added\n      // depending on user's scroll location.\n      // Ref: https://github.com/eKoopmans/html2pdf.js/issues/175\n      scrollX: 0,\n      scrollY: 0,\n    }).then((canvas) => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF(\"l\", \"mm\", [a4HeightMm, a4WidthMm]);\n\n      // Attempt to fit to the page using aspect ratio of the rendered div.\n      const paddingMm = 10;\n      const ar = input.offsetWidth / input.offsetHeight;\n      var xwidth = pdf.internal.pageSize.getWidth() - paddingMm;\n      var xheight = (pdf.internal.pageSize.getHeight() / ar) * 1.264583;\n      pdf.addImage(\n        imgData,\n        \"PNG\",\n        paddingMm * 0.5,\n        paddingMm * 0.5,\n        xwidth,\n        xheight\n      );\n\n      pdf.save(\"result.pdf\");\n\n      setLoading(false);\n    });\n  };\n\n  return (\n    <div>\n      {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n      <div id=\"myMm\" style={{ height: \"1mm\" }} />\n      <button\n        onClick={() => onClickDownload()}\n        className={\"ui primary button \" + (loading ? \"loading\" : \"\")}\n        disabled={disabled}\n      >\n        Download Template as PDF\n      </button>\n    </div>\n  );\n};\n\nexport default DownloadButton;\n","const Footer = () => {\n  return (\n    <div>\n      <div className=\"ui divider\"></div>\n      <h4 className=\"ui center aligned header\">\n        Built by{\" \"}\n        <a href=\"http://shy.am/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Shyam Guthikonda\n        </a>{\" \"}\n        in 2021\n      </h4>\n      <h2 className=\"ui center aligned header\">\n        <a\n          href=\"https://github.com/doggan/habit-template-gen\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i aria-hidden=\"true\" className=\"github icon large\"></i>\n        </a>\n      </h2>\n    </div>\n  );\n};\n\nexport default Footer;\n","import _ from \"lodash\";\n\n// Month here is 1-indexed (January is 1, February is 2, etc). This is\n// because we're using 0 as the day so that it returns the last day\n// of the last month, so you have to add 1 to the month number\n// so it returns the correct amount of days\n// Ref: https://stackoverflow.com/a/1184359/3518049\nfunction daysInMonth(month, year) {\n  return new Date(year, month + 1, 0).getDate();\n}\n\nfunction getDayOfWeek(year, month, day) {\n  const dayOfWeek = new Date(year, month, day).getDay();\n  return isNaN(dayOfWeek)\n    ? null\n    : [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"][dayOfWeek];\n}\n\nconst MONTHS = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst COL_COUNT = 31;\n\nconst MonthLayout = ({ month, year, habits }) => {\n  const renderTable = (month, year) => {\n    const renderHeader = () => {\n      const numDaysInMonth = daysInMonth(month, year);\n      const dayNumbers = _.range(1, COL_COUNT + 1).map((day) => {\n        const key = day;\n        return day <= numDaysInMonth ? (\n          <th key={key}>\n            {day}\n            <br />\n            <span className=\"day-name\">{getDayOfWeek(year, month, day)}</span>\n          </th>\n        ) : (\n          <th key={key}></th>\n        );\n      });\n\n      return (\n        <thead>\n          <tr className=\"center aligned\">\n            <th className=\"left-col\">\n              {MONTHS[month]} {year}\n            </th>\n            {dayNumbers}\n          </tr>\n        </thead>\n      );\n    };\n\n    const renderBody = () => {\n      const emptyCells = _.range(COL_COUNT).map((i) => <td key={i}></td>);\n      const renderedRows = habits.map((habit) => {\n        return (\n          <tr key={habit.id} className=\"right aligned\">\n            <td className=\"left-col\">{habit.text}</td>\n            {emptyCells}\n          </tr>\n        );\n      });\n\n      return <tbody>{renderedRows}</tbody>;\n    };\n\n    return (\n      <table className=\"ui celled table fixed compact small unstackable single line\">\n        {renderHeader()}\n        {renderBody()}\n      </table>\n    );\n  };\n\n  return <div>{renderTable(month, year)}</div>;\n};\n\nexport default MonthLayout;\n","import MonthLayout from \"./MonthLayout\";\nimport \"./MonthLayout.css\";\n\nconst getDesiredMonths = (startMonth, startYear, monthCount) => {\n  let desiredMonths = [];\n  let currentMonth = startMonth;\n  let currentYear = startYear;\n  for (let i = 0; i < monthCount; i++) {\n    desiredMonths.push({\n      month: currentMonth,\n      year: currentYear,\n    });\n\n    currentMonth++;\n    if (currentMonth >= 12) {\n      currentMonth = 0;\n      currentYear += 1;\n    }\n  }\n\n  return desiredMonths;\n};\n\nconst FullLayout = ({ startMonth, startYear, monthCount, habits }) => {\n  const desiredMonths = getDesiredMonths(startMonth, startYear, monthCount);\n  const renderedMonths = desiredMonths.map((val) => {\n    return (\n      <div key={`${val.year}-${val.month}`} className=\"item\">\n        <MonthLayout month={val.month} year={val.year} habits={habits} />\n      </div>\n    );\n  });\n\n  if (!habits || habits.length < 1) {\n    return (\n      <div className=\"ui error message\">\n        <p>Please enter at least 1 habit.</p>\n      </div>\n    );\n  }\n\n  return <div className=\"ui items\">{renderedMonths}</div>;\n};\n\nexport default FullLayout;\n","import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Habits from \"./Habits\";\nimport DateSelector from \"./DateSelector\";\nimport DownloadButton from \"./DownloadButton\";\nimport Footer from \"./Footer\";\nimport FullLayout from \"./FullLayout\";\nimport { nanoid } from 'nanoid'\n\nconst App = () => {\n  const [startMonth, setStartMonth] = useState(new Date().getMonth());\n  const [startYear, setStartYear] = useState(new Date().getFullYear());\n  const [monthCount, setMonthCount] = useState(3);\n  const [habits, setHabits] = useState([\n    { id: nanoid(), text: \"Exercise\" },\n    { id: nanoid(), text: \"Meditate\" },\n    { id: nanoid(), text: \"Practice piano\" },\n    { id: nanoid(), text: \"Study chess\" },\n    { id: nanoid(), text: \"Read\" },\n  ]);\n\n  const refRenderRoot = useRef(null);\n\n  const addHabit = (newHabitText) => {\n    setHabits([...habits,\n      { id: nanoid(), text: newHabitText }\n    ])\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"ui container segment\">\n        <h1 className=\"ui center aligned header\">\n          Habit Tracker - Template Generator\n        </h1>\n        <h3 className=\"ui dividing header\">Overview</h3>\n        <p>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.google.com/search?q=habit+tracker\"\n          >\n            Habit trackers\n          </a>{\" \"}\n          offer a way to track and build habits. This tool allows you to\n          generate monthly calendar views, print them out, and track your\n          habits.\n        </p>\n        <p>\n          While there are numerous apps that help track habits, I've found that\n          having a physical sheet of paper is the most effective way for me. I\n          print out my habits, put them in a highly visible location that I will\n          see daily (e.g. on the kitchen refrigerator), and physically mark an\n          \"X\" with a colored pencil when I complete a task for given day. Having\n          a physical list in a visible location means I can't hide from it, and\n          the feeling of physically coloring in a square when I finish an\n          activity gives me a sense of accomplishment that motivates me to\n          continue with the habit.\n        </p>\n        <p>Good luck!</p>\n        <h3 className=\"ui dividing header\">How to Use</h3>\n        <ol>\n          <li>Add the habits you want to track.</li>\n          <li>\n            Select the start month/year and the duration you want to track the\n            habits.\n          </li>\n          <li>Download and print the generated PDF.</li>\n        </ol>{\" \"}\n        <h3 className=\"ui dividing header\">Configuration</h3>\n        <div className=\"ui grid\">\n          <div className=\"eight wide column\">\n            <Habits\n              habits={habits}\n              onClickDeleteHabit={(index) =>\n                setHabits(habits.filter((_, i) => i !== index))\n              }\n              onClickAddHabit={(newHabit) => addHabit(newHabit)}\n              onClickClearAllHabits={() => setHabits([])}\n              onSetHabits={(newHabits) => setHabits(newHabits)}\n            />\n          </div>\n          <div className=\"eight wide column\">\n            <DateSelector\n              currentMonth={startMonth}\n              currentYear={startYear}\n              monthCount={monthCount}\n              onMonthChange={setStartMonth}\n              onYearChange={setStartYear}\n              onMonthCountChange={setMonthCount}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"ui\">\n        <div className=\"ui one column stackable center aligned page grid\">\n          <div className=\"column twelve wide\">\n            <div className=\"download-button\">\n              <DownloadButton \n                disabled={habits.length < 1} \n                refRenderRoot={refRenderRoot} \n              />\n            </div>\n          </div>\n        </div>\n        <div ref={refRenderRoot}>\n          <FullLayout\n            startMonth={startMonth}\n            startYear={startYear}\n            monthCount={monthCount}\n            habits={habits}\n          />\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}