{"version":3,"sources":["components/Habits.js","components/Dropdown.js","components/DateSelector.js","components/DownloadButton.js","components/Footer.js","components/MonthLayout.js","components/FullLayout.js","components/App.js","index.js"],"names":["Habits","habits","onClickDeleteHabit","onClickAddHabit","onClickClearAllHabits","useState","newHabitText","setNewHabitText","addNewHabit","renderedHabits","_","map","habit","index","className","onClick","e","preventDefault","href","type","placeholder","onChange","event","target","value","onKeyPress","key","disabled","Dropdown","label","options","selected","onSelectedChange","open","setOpen","ref","useRef","useEffect","onBodyClick","current","contains","document","body","addEventListener","removeEventListener","renderedOptions","option","isSelected","getRenderedLabel","MONTH_OPTIONS","DateSelector","currentMonth","currentYear","monthCount","onMonthChange","onYearChange","onMonthCountChange","yearToOption","year","durationToOption","duration","selection","startYear","Date","getFullYear","range","getYearOptions","maxDuration","DownloadButton","refRenderRoot","loading","setLoading","onClickDownload","px","mm","start","end","input","inputHeightMm","offsetHeight","Math","floor","getElementById","a4HeightMm","a4HeightPx","numPages","console","log","Array","join","split","val","id","comp","inputHeightPx","inputWidthPx","offsetWidth","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","ar","xwidth","internal","pageSize","getWidth","xheight","getHeight","addImage","paddingMm","save","style","height","Footer","rel","aria-hidden","getDayOfWeek","month","day","dayOfWeek","getDay","isNaN","MONTHS","MonthLayout","numDaysInMonth","getDate","daysInMonth","dayNumbers","COL_COUNT","renderHeader","emptyCells","i","renderedRows","renderBody","renderTable","FullLayout","startMonth","renderedMonths","desiredMonths","push","getDesiredMonths","length","App","getMonth","setStartMonth","setStartYear","setMonthCount","setHabits","filter","newHabit","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.66feb9c8.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport { useState } from \"react\";\nimport \"./Habits.css\";\n\nconst Habits = ({\n  habits,\n  onClickDeleteHabit,\n  onClickAddHabit,\n  onClickClearAllHabits,\n}) => {\n  const [newHabitText, setNewHabitText] = useState(\"\");\n\n  const onInputChange = (event) => {\n    setNewHabitText(event.target.value);\n  };\n\n  const onInputKeyPress = (event) => {\n    if (event.key === \"Enter\" && newHabitText) {\n      addNewHabit();\n    }\n  };\n\n  const addNewHabit = () => {\n    onClickAddHabit(newHabitText);\n\n    // Clear input.\n    setNewHabitText(\"\");\n  };\n\n  const renderedHabits = _.map(habits, (habit, index) => {\n    return (\n      <div key={index} className=\"item destroy-button\">\n        <div className=\"right floated content hide\">\n          <i className=\"x icon \" onClick={() => onClickDeleteHabit(index)}></i>\n        </div>\n        <div className=\"content\">{habit}</div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <b>\n        Habits{\" \"}\n        <small>\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              onClickClearAllHabits();\n            }}\n            href=\".\"\n          >\n            (clear all)\n          </a>\n        </small>\n      </b>\n\n      <div className=\"ui aligned divided list\">{renderedHabits}</div>\n      <div className=\"ui fluid small action input\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a habit...\"\n          onChange={onInputChange}\n          onKeyPress={onInputKeyPress}\n          value={newHabitText}\n        />\n        <button\n          disabled={!newHabitText}\n          onClick={() => addNewHabit()}\n          className=\"ui button\"\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Habits;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nconst Dropdown = ({ label, options, selected, onSelectedChange }) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n\n  useEffect(() => {\n    const onBodyClick = (event) => {\n      // Only attempt to 'close' the dropdown if the clicked\n      // target is not part of this Dropdown component.\n      // The component itself already handles open/closed state\n      // so we don't want to interfere with this.\n      if (ref.current && ref.current.contains(event.target)) {\n        return;\n      }\n      setOpen(false);\n    };\n\n    document.body.addEventListener(\"click\", onBodyClick);\n\n    return () => {\n      document.body.removeEventListener(\"click\", onBodyClick);\n    };\n  }, []);\n\n  const renderedOptions = options.map((option) => {\n    const isSelected = option.value === selected.value;\n    const getRenderedLabel = (label) => {\n      return isSelected ? <b>{label}</b> : label;\n    };\n\n    return (\n      <div\n        key={option.value}\n        className={\"item \" + (isSelected ? \"selected\" : \"\")}\n        onClick={() => {\n          onSelectedChange(option);\n        }}\n      >\n        {getRenderedLabel(option.label)}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"ui form\">\n      <div className=\"field\">\n        <label className=\"label\">{label}</label>\n        <div\n          ref={ref}\n          onClick={() => setOpen(!open)}\n          className={`ui selection dropdown ${open ? \"visible active\" : \"\"}`}\n        >\n          <i className=\"dropdown icon\"></i>\n          <div className=\"text\">{selected.label}</div>\n          <div className={`menu ${open ? \"visible transition\" : \"\"}`}>\n            {renderedOptions}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import _ from \"lodash\";\nimport Dropdown from \"./Dropdown\";\nimport \"./DateSelector.css\";\n\nconst MONTH_OPTIONS = [\n  {\n    label: \"January\",\n    value: 0,\n  },\n  {\n    label: \"February\",\n    value: 1,\n  },\n  {\n    label: \"March\",\n    value: 2,\n  },\n  {\n    label: \"April\",\n    value: 3,\n  },\n  {\n    label: \"May\",\n    value: 4,\n  },\n  {\n    label: \"June\",\n    value: 5,\n  },\n  {\n    label: \"July\",\n    value: 6,\n  },\n  {\n    label: \"August\",\n    value: 7,\n  },\n  {\n    label: \"September\",\n    value: 8,\n  },\n  {\n    label: \"October\",\n    value: 9,\n  },\n  {\n    label: \"November\",\n    value: 10,\n  },\n  {\n    label: \"December\",\n    value: 11,\n  },\n];\n\nconst DateSelector = ({\n  currentMonth,\n  currentYear,\n  monthCount,\n  onMonthChange,\n  onYearChange,\n  onMonthCountChange,\n}) => {\n  const getCurrentMonth = () => {\n    return MONTH_OPTIONS[currentMonth];\n  };\n\n  const getYearOptions = () => {\n    const offset = 5;\n    const startYear = new Date().getFullYear();\n    return _.range(startYear - offset, startYear + offset).map(yearToOption);\n  };\n\n  const yearToOption = (year) => {\n    return {\n      label: year,\n      value: year,\n    };\n  };\n\n  const getDurationOptions = () => {\n    const minDuration = 1;\n    // TODO(shyam): we should be able to support up to 12 months,\n    // but PDF gen currently doesn't support multi-page printing.\n    const maxDuration = 4;\n    return _.range(minDuration, maxDuration + 1).map(durationToOption);\n  };\n\n  const durationToOption = (duration) => {\n    return {\n      label: duration > 1 ? `${duration} months` : `${duration} month`,\n      value: duration,\n    };\n  };\n\n  return (\n    <div>\n      <Dropdown\n        label={\"Start month:\"}\n        options={MONTH_OPTIONS}\n        selected={getCurrentMonth()}\n        onSelectedChange={(selection) => onMonthChange(selection.value)}\n      />\n\n      <Dropdown\n        label={\"Start year:\"}\n        options={getYearOptions()}\n        selected={yearToOption(currentYear)}\n        onSelectedChange={(selection) => onYearChange(selection.value)}\n      />\n\n      <Dropdown\n        label={\"Duration:\"}\n        options={getDurationOptions()}\n        selected={durationToOption(monthCount)}\n        onSelectedChange={(selection) => {\n          onMonthCountChange(selection.value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DateSelector;\n","import html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { useState } from \"react\";\n\nconst pxToMm = (px) => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = (mm) => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function (val, id) {\n      return id + start;\n    });\n};\n\n// TODO(shyam):\n// - this is likely broken for > 4 months worth of tables (need to support multiple pages)\n// - this is likely broken for different screen resolutions or browser size configurations.. needs more testing.\nconst DownloadButton = ({ refRenderRoot }) => {\n  const [loading, setLoading] = useState(false);\n\n  const onClickDownload = () => {\n    setLoading(true);\n\n    // Ref: https://medium.com/@shivekkhurana/how-to-create-pdfs-from-react-components-client-side-solution-7f506d9dfa6d\n    const input = refRenderRoot.current;\n    const inputHeightMm = pxToMm(input.offsetHeight);\n    const a4WidthMm = 210;\n    const a4HeightMm = 297;\n    const a4HeightPx = mmToPx(a4HeightMm);\n    const numPages =\n      inputHeightMm <= a4HeightMm\n        ? 1\n        : Math.floor(inputHeightMm / a4HeightMm) + 1;\n    console.log({\n      input,\n      inputHeightMm,\n      a4HeightMm,\n      a4HeightPx,\n      numPages,\n      range: range(0, numPages),\n      comp: inputHeightMm <= a4HeightMm,\n      inputHeightPx: input.offsetHeight,\n      inputWidthPx: input.offsetWidth,\n    });\n\n    html2canvas(input).then((canvas) => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF(\"l\", \"mm\", [a4HeightMm, a4WidthMm]);\n\n      // Attempt to fit to the page using aspect ratio of the rendered div.\n      const paddingMm = 10;\n      const ar = input.offsetWidth / input.offsetHeight;\n      var xwidth = pdf.internal.pageSize.getWidth() - paddingMm;\n      var xheight = (pdf.internal.pageSize.getHeight() / ar) * 1.264583;\n      pdf.addImage(\n        imgData,\n        \"PNG\",\n        paddingMm * 0.5,\n        paddingMm * 0.5,\n        xwidth,\n        xheight\n      );\n\n      pdf.save(\"result.pdf\");\n\n      setLoading(false);\n    });\n  };\n\n  return (\n    <div>\n      {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n      <div id=\"myMm\" style={{ height: \"1mm\" }} />\n      <button\n        onClick={() => onClickDownload()}\n        className={\"ui primary button \" + (loading ? \"loading\" : \"\")}\n      >\n        Download Template as PDF\n      </button>\n    </div>\n  );\n};\n\nexport default DownloadButton;\n","const Footer = () => {\n  return (\n    <div>\n      <div className=\"ui divider\"></div>\n      <h4 className=\"ui center aligned header\">\n        Built by{\" \"}\n        <a href=\"http://shy.am/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Shyam Guthikonda\n        </a>{\" \"}\n        in 2021\n      </h4>\n      <h2 className=\"ui center aligned header\">\n        <a\n          href=\"https://github.com/doggan/habit-template-gen\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i aria-hidden=\"true\" className=\"github icon large\"></i>\n        </a>\n      </h2>\n    </div>\n  );\n};\n\nexport default Footer;\n","import _ from \"lodash\";\n\n// Month here is 1-indexed (January is 1, February is 2, etc). This is\n// because we're using 0 as the day so that it returns the last day\n// of the last month, so you have to add 1 to the month number\n// so it returns the correct amount of days\n// Ref: https://stackoverflow.com/a/1184359/3518049\nfunction daysInMonth(month, year) {\n  return new Date(year, month + 1, 0).getDate();\n}\n\nfunction getDayOfWeek(year, month, day) {\n  const dayOfWeek = new Date(year, month, day).getDay();\n  return isNaN(dayOfWeek)\n    ? null\n    : [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"][dayOfWeek];\n}\n\nconst MONTHS = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst COL_COUNT = 31;\n\nconst MonthLayout = ({ month, year, habits }) => {\n  const renderTable = (month, year) => {\n    const renderHeader = () => {\n      const numDaysInMonth = daysInMonth(month, year);\n      const dayNumbers = _.range(1, COL_COUNT + 1).map((day) => {\n        const key = day;\n        return day <= numDaysInMonth ? (\n          <th key={key}>\n            {day}\n            <br />\n            <span className=\"day-name\">{getDayOfWeek(year, month, day)}</span>\n          </th>\n        ) : (\n          <th key={key}></th>\n        );\n      });\n\n      return (\n        <thead>\n          <tr className=\"center aligned\">\n            <th className=\"left-col\">\n              {MONTHS[month]} {year}\n            </th>\n            {dayNumbers}\n          </tr>\n        </thead>\n      );\n    };\n\n    const renderBody = () => {\n      const emptyCells = _.range(COL_COUNT).map((i) => <td key={i}></td>);\n      const renderedRows = habits.map((habit, index) => {\n        return (\n          <tr key={index} className=\"right aligned\">\n            <td className=\"left-col\">{habit}</td>\n            {emptyCells}\n          </tr>\n        );\n      });\n\n      return <tbody>{renderedRows}</tbody>;\n    };\n\n    return (\n      <table className=\"ui celled table fixed compact small unstackable single line\">\n        {renderHeader()}\n        {renderBody()}\n      </table>\n    );\n  };\n\n  return <div>{renderTable(month, year)}</div>;\n};\n\nexport default MonthLayout;\n","import MonthLayout from \"./MonthLayout\";\nimport \"./MonthLayout.css\";\n\nconst getDesiredMonths = (startMonth, startYear, monthCount) => {\n  let desiredMonths = [];\n  let currentMonth = startMonth;\n  let currentYear = startYear;\n  for (let i = 0; i < monthCount; i++) {\n    desiredMonths.push({\n      month: currentMonth,\n      year: currentYear,\n    });\n\n    currentMonth++;\n    if (currentMonth >= 12) {\n      currentMonth = 0;\n      currentYear += 1;\n    }\n  }\n\n  return desiredMonths;\n};\n\nconst FullLayout = ({ startMonth, startYear, monthCount, habits }) => {\n  const desiredMonths = getDesiredMonths(startMonth, startYear, monthCount);\n  const renderedMonths = desiredMonths.map((val) => {\n    return (\n      <div key={`${val.year}-${val.month}`} className=\"item\">\n        <MonthLayout month={val.month} year={val.year} habits={habits} />\n      </div>\n    );\n  });\n\n  if (!habits || habits.length < 1) {\n    return (\n      <div className=\"ui error message\">\n        <p>Please enter at least 1 habit.</p>\n      </div>\n    );\n  }\n\n  return <div className=\"ui items\">{renderedMonths}</div>;\n};\n\nexport default FullLayout;\n","import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Habits from \"./Habits\";\nimport DateSelector from \"./DateSelector\";\nimport DownloadButton from \"./DownloadButton\";\nimport Footer from \"./Footer\";\nimport FullLayout from \"./FullLayout\";\n\nconst App = () => {\n  const [startMonth, setStartMonth] = useState(new Date().getMonth());\n  const [startYear, setStartYear] = useState(new Date().getFullYear());\n  const [monthCount, setMonthCount] = useState(3);\n  const [habits, setHabits] = useState([\n    \"Exercise\",\n    \"Meditate\",\n    \"Practice piano\",\n    \"Study chess\",\n    \"Read\",\n  ]);\n\n  const refRenderRoot = useRef(null);\n\n  return (\n    <div className=\"app\">\n      <div className=\"ui container segment\">\n        <h1 className=\"ui center aligned header\">\n          Habit Tracker - Template Generator\n        </h1>\n        <h3 className=\"ui dividing header\">Overview</h3>\n        <p>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.google.com/search?q=habit+tracker\"\n          >\n            Habit trackers\n          </a>{\" \"}\n          offer a way to track and build habits. This tool allows you to\n          generate monthly calendar views, print them out, and track your\n          habits.\n        </p>\n        <p>\n          While there are numerous apps that help track habits, I've found that\n          having a physical sheet of paper is the most effective way for me. I\n          print out my habits, put them in a highly visible location that I will\n          see daily (e.g. on the kitchen refrigerator), and physically mark an\n          \"X\" with a colored pencil when I complete a task for given day. Having\n          a physical list in a visible location means I can't hide from it, and\n          the feeling of physically coloring in a square when I finish an\n          activity gives me a sense of accomplishment that motivates me to\n          continue with the habit.\n        </p>\n        <p>Good luck!</p>\n        <h3 className=\"ui dividing header\">How to Use</h3>\n        <ol>\n          <li>Add the habits you want to track.</li>\n          <li>\n            Select the start month/year and the duration you want to track the\n            habits.\n          </li>\n          <li>Download and print the generated PDF.</li>\n        </ol>{\" \"}\n        <h3 className=\"ui dividing header\">Configuration</h3>\n        <div className=\"ui grid\">\n          <div className=\"eight wide column\">\n            <Habits\n              habits={habits}\n              onClickDeleteHabit={(index) =>\n                setHabits(habits.filter((_, i) => i !== index))\n              }\n              onClickAddHabit={(newHabit) => setHabits([...habits, newHabit])}\n              onClickClearAllHabits={() => setHabits([])}\n            />\n          </div>\n          <div className=\"eight wide column\">\n            <DateSelector\n              currentMonth={startMonth}\n              currentYear={startYear}\n              monthCount={monthCount}\n              onMonthChange={setStartMonth}\n              onYearChange={setStartYear}\n              onMonthCountChange={setMonthCount}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"ui\">\n        <div className=\"ui one column stackable center aligned page grid\">\n          <div className=\"column twelve wide\">\n            <div className=\"download-button\">\n              <DownloadButton refRenderRoot={refRenderRoot} />\n            </div>\n          </div>\n        </div>\n        <div ref={refRenderRoot}>\n          <FullLayout\n            startMonth={startMonth}\n            startYear={startYear}\n            monthCount={monthCount}\n            habits={habits}\n          />\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}